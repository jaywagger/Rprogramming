test <
test <-"myR"
source('C:/IoTJY/RWork/basicR.R', encoding = 'UTF-8')
test <-"myR"
test
test<-num
test
myR
myR
myR
myR<-num
myR
result <- 100
result
result2 <- "test"
result2
#R에서 제공되는 함수를 이용할 수 있으며
#class함수는
class(result)
class(result2)
test <- as.character(result)
test
#R에서 제공되는 함수를 이용할 수 있으며
#class함수는
class(result)
class(result2)
test <- as.character(result)
test
clss(test)
class(test)
#=, <- 같은 것 처럼 보이지만 <- 를 이용해서 변수에 데이터를 할당
a=100
b <- 100
a
b
sqrt(9)
sqrt(x=9)
x
sqrt(x <- 9)
x
?c
myvector <- c(100,200,300)
myvector
myvector[1]
myvector[2]
myvector[3]
myvector2 <- c(10,20,30)
myvector1
myvector
myvector2
myvector+20
myvector*2
myvector+myvector2
mytext <- c("java","R","hadoop","android")
mytext[1]
mytext[1,2]
mytext[c(1,2)]
mytext[c(1,3)]
mytext[C(1,2)]
mytext[c(1:3)]
1:3
1:100
mytext[-1] #1번 요소 제외한 나머지지
mytext[c(-1,-3)]
#true(T)와 false(F)를 이용해서 작업하기
mytext[c(T,T,F,F)] #TRUE로 표현된 요소만만
mytext[mytext=="java"] #조건을 만족하는 요소
numlist <- 1:100
numlist
numlist%%2==0 #%%가 나머지 구하기기
numlist[numlist%%2==0] #짝수구하기기
numlist[numlist%%2==1] #홀수구하기기
numlist2 <- seq(1,10)
numlist2
numlist <- seq(1,10 by=2)
numlist <- seq(1,10, by=2)
v1 <- (70,80,90,100)
v1 <- (70,80,90,100)
v1 <- c(70,80,90,100)
names(v1)
names(v1) <- c("국어","수학","영어","자바")
v1
length(v1)
mean(v1)
max(1)
max(v1)
min(v1)
#행렬
matrix(1:15)
?matrix
mymat1 <- matrix(1:15,ncol = 3)
mymat1
mymat1 <- matrix(1:15,ncol = 3,byrow = T)
mymat1
#matrix에서 원하는 값을 추출하기
mymat[2,2]#행, 열열
#matrix에서 원하는 값을 추출하기
mymat1[2,2]#행, 열열
mymat1[3,3]#행, 열열
mymat1[3,c(1:3)]#행, 열열
mymat1[1,c(1:3)]#행, 열열
mymat1[2,c(1:3)]#행, 열열
mymat1[1,] #모든 열
mymat1[,1]
#1행과 3행을 뺸 데이터
mymat1[,c(1,3)]
#1행과 3행 데이터
mymat1[c(1,3),]
#1행과 3행을 뺀 데이터
mymat1[-c(1,3),]
#미니실습1: 2행부터 4행까지 출력
#(단 2번 3번 컬럼만 )
mymat[2:4,]
#미니실습1: 2행부터 4행까지 출력
#(단 2번 3번 컬럼만 )
mymat[c(2:4),]
#미니실습1: 2행부터 4행까지 출력
#(단 2번 3번 컬럼만 )
mymat1[c(2:4),]
#미니실습1: 2행부터 4행까지 출력
#(단 2번 3번 열만 )
mymat1[2:4,c(2,3)]
#
cbind(mymat1,c(1,11,111,1111))
addmymat1
addmymat1
addmymat1 <- cbind(mymat1,c(1,11,111,1111))
addmymat1
addmymy2 <- rbind(mymat2,c(1,11))
addmymy2 <- rbind(mymat1,c(1,11))
addmymat2 <- rbind(mymat1,c(1,11))
addmymat2
colnames(mymat1) <- c("a","b","c")
mymat1
#행에 제목 추가
rownames(mymat1) <- c("r1","r2","r3","r4","r5")
mymat1
mean(mymat1)
exmat <- matrix(4:4,ncol = 4,byrow = T)
exmat
exmat <- matrix(4:4,byrow = T)
exmat
mymat1 <- matrix(1:15,ncol = 3) #숫자아래로
mymat1
exmat <- matrix(4:4,ncol = 4)
exmat
exmat <- matrix(1:16,ncol = 4)
exmat
exmat <- matrix(80,90,ncol = 4)
exmat
exmat <- matrix((80,90,70,100),4,ncol = 4)
exmat
exmat <- matrix((80,90,70,100,80,99,78,72,90,78,82,78,99,89,78,90),4,ncol = 4)
exmat
exmat <- matrix((80,90,70,100,80,99,78,72,90,78,82,78,99,89,78,90),4)
exmat
exmat <- matrix(1:15,ncol = 3,byrow = T)
exmat
exmat <- matrix(1:16,ncol = 4,byrow = T)
exmat
?matrix
exmat <- matrix(data = (80,90,70,100,80,99,78,72,90,78,82,78,99,89,78,90), nrow = 4, ncol = 4, byrow = TRUE)
exmat
c(80,90,70,100,80,99,78,72,90,78,82,78,99,89,78,90), nrow = 4, ncol = 4, byrow = TRUE)
exmat <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
exmat
exmat <- matrix(c(80,90,70,100,80,99,78,72,90,78,82,78,99,89,78,90), nrow = 4, ncol = 4, byrow = TRUE,dimnames = list(c("kim", "lee", "hong", "jang"),c("국어", "영어", "과학", "수학")))
exmat
mean(exmat)
exmat[1,1]
exmat[1,1:3]
exmat[1,1:4]
mean(exmat[1,1:4])
kim <- mean(exmat[1,1:4])
kim
lee <- mean(exmat[2,1:4])
lee
hong <- mean(exmat[3,1:4])
jang <- mean(exmat[4,1:4])
kim
lee
hong
jang
avg_name <- matrix(c(kim,lee,hong,jang))
avg_name
avg_name <- matrix(c(kim,lee,hong,jang),nrow = 1,ncol = 4)
avg_name
korean
korean <- mean(exmat[1:4,1])
korean
english <- mean(exmat[1:4,2])
english
science <- mean(exmat[1:4,3])
science
math <- mean(exmat[1:4,4])
math
avg_subject <- matrix(c(korean,english,science,math),nrow = 1,ncol = 4)
avg_subject
exmat <- matrix(c(80,90,70,100,80,99,78,72,90,78,82,78,99,89,78,90), nrow = 4, ncol = 4, byrow = TRUE,dimnames = list(c("kim", "lee", "hong", "jang"),c("국어", "영어", "과학", "수학")))
exmat
avg_name
avg_subject
